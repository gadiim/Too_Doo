Кроки для реалізації IndexedDB у вашому Angular проєкті

1. Встановлення бібліотеки ngx-indexed-db
Щоб спростити роботу з IndexedDB, ви можете скористатися бібліотекою ngx-indexed-db.
//////////////////////////////////////////////////////////////////////////////////
//	bash
//
//	npm install ngx-indexed-db --save
//////////////////////////////////////////////////////////////////////////////////


2. Налаштування IndexedDB у вашому проєкті
Після встановлення бібліотеки, вам потрібно налаштувати IndexedDB у вашому проєкті.

Оновіть app.module.ts для додавання конфігурації:
//////////////////////////////////////////////////////////////////////////////////
//	typescript
//	
//	import { NgModule } from '@angular/core';
//	import { BrowserModule } from '@angular/platform-browser';
//	import { AppComponent } from './app.component';
//	import { NgxIndexedDBModule, DBConfig } from 'ngx-indexed-db';
//	
//	const dbConfig: DBConfig = {
//	  name: 'TodoDB',
//	  version: 1,
//	  objectStoresMeta: [
//	    {
//	      store: 'todoItems',
//	      storeConfig: { keyPath: 'id', autoIncrement: true },
//	      storeSchema: [
//	        { name: 'title', keypath: 'title', options: { unique: false } },
//	        { name: 'description', keypath: 'description', options: { unique: false } },
//	        { name: 'date', keypath: 'date', options: { unique: false } },
//	        { name: 'priority', keypath: 'priority', options: { unique: false } },
//	        { name: 'completed', keypath: 'completed', options: { unique: false } }
//	      ]
//	    }
//	  ]
//	};
//	
//	@NgModule({
//	  declarations: [AppComponent],
//	  imports: [BrowserModule, NgxIndexedDBModule.forRoot(dbConfig)],
//	  providers: [],
//	  bootstrap: [AppComponent]
//	})
//	export class AppModule {}

3. Використання IndexedDB у todo-list.service.ts

Тепер ви можете оновити ваш сервіс для роботи з IndexedDB.
//////////////////////////////////////////////////////////////////////////////////
//	typescript
//	
//	import { Injectable } from '@angular/core';
//	import { NgxIndexedDBService } from 'ngx-indexed-db';
//	import { TodoItem } from '../models/todoItem';
//	import { Observable } from 'rxjs';
//	
//	@Injectable({
//	  providedIn: 'root'
//	})
//	export class TodoListService {
//	
//	  constructor(private dbService: NgxIndexedDBService) { }
//	
//	  getTodoItems(): Observable<TodoItem[]> {
//	    return this.dbService.getAll('todoItems');
//	  }
//	
//	  addTodoItem(todoItem: TodoItem): void {
//	    this.dbService.add('todoItems', todoItem).subscribe({
//	      next: (id) => {
//	        console.log(`Item added with id: ${id}`);
//	      },
//	      error: (error) => {
//	        console.error('Error adding item:', error);
//	      }
//	    });
//	  }
//	
//	  updateTodoItem(todoItem: TodoItem): void {
//	    this.dbService.update('todoItems', todoItem).subscribe({
//	      next: () => {
//	        console.log('Item updated');
//	      },
//	     error: (error) => {
//	        console.error('Error updating item:', error);
//	      }
//	    });
//	  }
//	
//	  deleteTodoItem(id: number): void {
//	    this.dbService.delete('todoItems', id).subscribe({
//	      next: () => {
//	        console.log('Item deleted');
//	      },
//	      error: (error) => {
//	        console.error('Error deleting item:', error);
//	      }
//	    });
//	  }
//	}
//////////////////////////////////////////////////////////////////////////////////

4. Оновіть компонент todo-form.component.ts

Тепер, коли сервіс працює з IndexedDB, функції збереження в компоненті залишаються незмінними.

//////////////////////////////////////////////////////////////////////////////////
//	typescript
//	
//	import { Component, Input, Output, EventEmitter } from '@angular/core';
//	import { TodoItem } from '../../models/todoItem';
//	import { TodoListService } from '../../services/todo-list.service';
//	
//	@Component({
//	  selector: 'app-todo-form',
//	  templateUrl: './todo-form.component.html',
//	  styleUrls: ['./todo-form.component.css']
//	})
//	export class TodoFormComponent {
//	  @Input() todoItem: TodoItem = new TodoItem(0, '', new Date(), '', '', '', 0, false);
//	  @Output() todoAdded = new EventEmitter<void>();
//	  @Output() canceled = new EventEmitter<void>();
//	  @Output() closed = new EventEmitter<void>();
//	
//	  constructor(private todoListService: TodoListService) { }
//	
//	  onSave(): void {
//	    if (!this.todoItem.id) {
//	      this.todoListService.addTodoItem(this.todoItem);
//	      this.todoAdded.emit(); 
//	    } else {
//	      this.todoListService.updateTodoItem(this.todoItem);
//	    }
//	    this.closeForm(); 
//	  }
//	
//	  onCancel(): void {
//	    this.canceled.emit();
//	    this.closeForm();
//	  }
//	
//	  closeForm(): void {
//	    this.closed.emit();
//	  }
//	}
//////////////////////////////////////////////////////////////////////////////////

5. Оновлення шаблону для роботи з формою

Форма залишається такою ж, як і була раніше, оскільки логіка роботи з IndexedDB винесена в сервіс.

Переваги IndexedDB:
Можливість зберігати великі об'єми даних на стороні клієнта.
Підтримка роботи в офлайн-режимі.